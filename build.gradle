plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

apply plugin: 'com.github.johnrengelman.shadow'

version = '1.0'
group = 'com.yourname.modid' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'modid'

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: '1.19.2'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', 'magicrpgbot'

            mods {
                magicrpgbot {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'magicrpgbot'

            mods {
                magicrpgbot {
                    source sourceSets.main
                }
            }
        }
        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'magicrpgbot'

            mods {
                magicrpgbot {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'magicrpgbot', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                magicrpgbot {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenCentral()
    maven {
        name 'm2-dv8tion'
        url 'https://m2.dv8tion.net/releases'
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.3.0'
    minecraftLibrary("net.dv8tion:JDA:5.0.0-beta.1") {
        exclude module: "opus-java"
        exclude group: "org.jetbrains", module: "annotations"
    }

}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "magicrpgbot",
                "Specification-Vendor"    : "magicrpgbot",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "magicrpgbot",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}




publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
jar.finalizedBy('reobfJar')

shadowJar {
    mergeServiceFiles()
    configurations = [project.configurations.getByName("minecraftLibrary")]

    relocate('okhttp', 'magicrpgbot.okhttp')
    relocate('okio', 'magicrpgbot.okio')
    relocate('org.slf4j', 'magicrpgbot.slf4j')
    relocate('net.dv8tion.jda', 'magicrpgbot.jda')
    relocate('kotlin', 'magicrpgbot.kotlin')
    relocate('gnu.trove', 'magicrpgbot.trove')
    relocate('org.apache.commons', 'magicrpgbot.apachecommons')
    relocate('org.intellij', 'magicrpgbot.intellij')
    relocate('org.jetbrains', 'magicrpgbot.jetbrains')
    relocate('com.fasterxml', 'magicrpgbot.fasterxml')
    relocate('com.iwebpp.crypto', 'magicrpgbot.iwebppcrypto')
    relocate('com.neovisionaries.ws', 'magicrpgbot.ws')

}

reobf {
    shadowJar {}
}